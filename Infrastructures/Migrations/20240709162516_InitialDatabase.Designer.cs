// <auto-generated />
using System;
using Infrastructures;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructures.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240709162516_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.AddressToShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AddressToShips");
                });

            modelBuilder.Entity("Domain.Entities.AddressUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressToShipId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressToShipId");

                    b.HasIndex("UserId");

                    b.ToTable("AddressUsers");
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "VESTA"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "MEDOPHARM"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Công ty TNHH Abbott Healthcare Việt Nam"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "TIPHARCO"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "STADA"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "CÔNG TY TNHH DƯỢC THẢO HOÀNG THÀNH"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "CÔNG TY CỔ PHẦN KOREA UNITED PHARM. INT’L"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "DANAPHA"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "CÔNG TY CỔ PHẦN DƯỢC PHẨM GLOMED VIỆT NAM"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "S.C. ANTIBIOTICE S.A"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "US PHARMA"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "CÔNG TY TNHH BRV HEALTHCARE"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "CÔNG TY CP DƯỢC NATURE VIỆT NAM"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "STELLA"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ChildCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("ChildCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Thuốc kháng sinh, kháng nấm",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Thuốc điều trị ung thư",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Thuốc tim mạch và máu",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Thuốc thần kinh",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Thuốc tiêu hóa và gan mật",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Bổ sung Canxi và vitamin D",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Vitamin tổng hợp",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Dầu cá, Omega 3, DHA",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Vitamind C các loại",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Bổ sung sắt và Axit Folic",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Sinh lý nam",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "Sức khỏe tình dục",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "Cân bằng nội tiết tố",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Sinh lý nữ",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Hỗ trợ mãn kinh",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Name = "Dụng cụ vệ sinh mũi",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            Name = "Kim các loại",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            Name = "Máy massage",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            Name = "Túi chườm",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            Name = "Vớ ngăn tĩnh mạch",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            Name = "Găng tay",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 22,
                            IsDeleted = false,
                            Name = "Đai lưng",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 23,
                            IsDeleted = false,
                            Name = "Dụng cụ vệ sinh tai",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 24,
                            IsDeleted = false,
                            Name = "Đai nẹp",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 25,
                            IsDeleted = false,
                            Name = "Bao cao su",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 26,
                            IsDeleted = false,
                            Name = "Gel bôi trơn",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 27,
                            IsDeleted = false,
                            Name = "Sữa rửa mặt",
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 28,
                            IsDeleted = false,
                            Name = "Kem chống nắng",
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 29,
                            IsDeleted = false,
                            Name = "Dưỡng da mặt",
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 30,
                            IsDeleted = false,
                            Name = "Mặt nạ",
                            ParentCategoryId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiscountPercent")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool?>("Thumbnail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00033777_fluconazole_150mg_stada_1v_4732_624e_large_38eebb47c6.jpg",
                            IsDeleted = false,
                            ProductId = 1,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 2,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00033777_fluconazole_150mg_stada_1v_5259_624e_large_672d2b5a9e.jpg",
                            IsDeleted = false,
                            ProductId = 1,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 3,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00033777_fluconazole_150mg_stada_1v_7354_624e_large_01a868ca04.jpg",
                            IsDeleted = false,
                            ProductId = 1,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 4,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00033777_fluconazole_150mg_stada_1v_7063_624e_large_830492cc36.jpg",
                            IsDeleted = false,
                            ProductId = 1,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 5,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00033777_fluconazole_150mg_stada_1v_2072_624e_large_7c79ce80d5.jpg",
                            IsDeleted = false,
                            ProductId = 1,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 6,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00033777_fluconazole_150mg_stada_1v_3524_624e_large_68760098c9.jpg",
                            IsDeleted = false,
                            ProductId = 1,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 7,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00500234_hoat_huyet_truong_phuc_3x10_3439_6293_large_fce5c74dce.jpg",
                            IsDeleted = false,
                            ProductId = 2,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 8,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00500234_hoat_huyet_truong_phuc_3x10_1339_6293_large_2fbeef8a80.jpg",
                            IsDeleted = false,
                            ProductId = 2,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 9,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00500234_hoat_huyet_truong_phuc_3x10_9001_6293_large_d466889fe8.jpg",
                            IsDeleted = false,
                            ProductId = 2,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 10,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00500234_hoat_huyet_truong_phuc_3x10_5493_6293_large_eaef9efed8.jpg",
                            IsDeleted = false,
                            ProductId = 2,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 11,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00500234_hoat_huyet_truong_phuc_3x10_5613_6293_large_b6207da4c9.jpg",
                            IsDeleted = false,
                            ProductId = 2,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 12,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00500234_hoat_huyet_truong_phuc_3x10_5302_6293_large_cb9d8bb7d0.jpg",
                            IsDeleted = false,
                            ProductId = 2,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 13,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_1754_61c9_large_1c441194d7.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 14,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_4870_61ca_large_d695e0e56c.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 15,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_7727_61c9_large_0288abb0c6.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 16,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_3531_61c9_large_239e93283d.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 17,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_7982_61c9_large_d93fb7b527.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 18,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_9403_61c9_large_62caccad63.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 19,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00014376_ginkokup_40_4751_61c9_large_8104fe3818.jpg",
                            IsDeleted = false,
                            ProductId = 3,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 20,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00029275_dacolfort_500mg_danapha_3x10_6954_6062_large_fdad157540.jpg",
                            IsDeleted = false,
                            ProductId = 4,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 21,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00029275_dacolfort_500mg_danapha_3x10_9199_6062_large_76a7c96d6f.jpg",
                            IsDeleted = false,
                            ProductId = 4,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 22,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00029275_dacolfort_500mg_danapha_3x10_4671_6062_large_a94f37f148.jpg",
                            IsDeleted = false,
                            ProductId = 4,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 23,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00029275_dacolfort_500mg_danapha_3x10_9994_6062_large_aaf9f67a9d.jpg",
                            IsDeleted = false,
                            ProductId = 4,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 24,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_09967_d0eba34d24.jpg",
                            IsDeleted = false,
                            ProductId = 5,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 25,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_09971_b413c0cf14.jpg",
                            IsDeleted = false,
                            ProductId = 5,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 26,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_09973_817ea771bb.jpg",
                            IsDeleted = false,
                            ProductId = 5,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 27,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00172_a49dadfd55.jpg",
                            IsDeleted = false,
                            ProductId = 6,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 28,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00175_8f116c3675.jpg",
                            IsDeleted = false,
                            ProductId = 6,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 29,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00178_b91485146e.jpg",
                            IsDeleted = false,
                            ProductId = 6,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 30,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00179_b1dc3be312.jpg",
                            IsDeleted = false,
                            ProductId = 6,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 31,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03394_e628d9caee.jpg",
                            IsDeleted = false,
                            ProductId = 7,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 32,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03398_copy_12c67a69b8.jpg",
                            IsDeleted = false,
                            ProductId = 7,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 33,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03397_842e04f439.jpg",
                            IsDeleted = false,
                            ProductId = 7,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 34,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03400_ec50318d8e.jpg",
                            IsDeleted = false,
                            ProductId = 7,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 35,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03401_b375b86c28.jpg",
                            IsDeleted = false,
                            ProductId = 7,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 36,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03512_efbea39e45.jpg",
                            IsDeleted = false,
                            ProductId = 8,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 37,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03515_38d3012027.jpg",
                            IsDeleted = false,
                            ProductId = 8,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 38,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03520_06e66bad9f.jpg",
                            IsDeleted = false,
                            ProductId = 8,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 39,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_03521_7efa50bb0f.jpg",
                            IsDeleted = false,
                            ProductId = 8,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 40,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00146_7d022b2ddd.jpg",
                            IsDeleted = false,
                            ProductId = 9,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 41,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00152_9dad73d9c3.jpg",
                            IsDeleted = false,
                            ProductId = 9,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 42,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00153_bad1324204.jpg",
                            IsDeleted = false,
                            ProductId = 9,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 43,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/DSC_00154_baf22f1c94.jpg",
                            IsDeleted = false,
                            ProductId = 9,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 44,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00006610_scanneuron_forte_4082_61df_large_203eef608c.jpg",
                            IsDeleted = false,
                            ProductId = 10,
                            Thumbnail = true
                        },
                        new
                        {
                            Id = 45,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00006610_scanneuron_forte_7972_61df_large_bc5e17f862.jpg",
                            IsDeleted = false,
                            ProductId = 10,
                            Thumbnail = false
                        },
                        new
                        {
                            Id = 46,
                            ImageLink = "https://cdn.nhathuoclongchau.com.vn/unsafe/636x0/filters:quality(90)/https://cms-prod.s3-sgn09.fptcloud.com/00006610_scanneuron_forte_5617_61df_large_7218352645.jpg",
                            IsDeleted = false,
                            ProductId = 10,
                            Thumbnail = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChildCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChildCategoryId");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChildCategoryId = 1,
                            IsDeleted = false,
                            Name = "Danh mục"
                        },
                        new
                        {
                            Id = 2,
                            ChildCategoryId = 1,
                            IsDeleted = false,
                            Name = "Dạng bào chế"
                        },
                        new
                        {
                            Id = 3,
                            ChildCategoryId = 1,
                            IsDeleted = false,
                            Name = "Quy cách"
                        },
                        new
                        {
                            Id = 4,
                            ChildCategoryId = 1,
                            IsDeleted = false,
                            Name = "Thành Phần"
                        },
                        new
                        {
                            Id = 5,
                            ChildCategoryId = 1,
                            IsDeleted = false,
                            Name = "Số đăng kí"
                        },
                        new
                        {
                            Id = 6,
                            ChildCategoryId = 3,
                            IsDeleted = false,
                            Name = "Danh mục"
                        },
                        new
                        {
                            Id = 7,
                            ChildCategoryId = 3,
                            IsDeleted = false,
                            Name = "Dạng bào chế"
                        },
                        new
                        {
                            Id = 8,
                            ChildCategoryId = 3,
                            IsDeleted = false,
                            Name = "Quy cách"
                        },
                        new
                        {
                            Id = 9,
                            ChildCategoryId = 3,
                            IsDeleted = false,
                            Name = "Thành phần"
                        },
                        new
                        {
                            Id = 10,
                            ChildCategoryId = 3,
                            IsDeleted = false,
                            Name = "Số đăng kí"
                        },
                        new
                        {
                            Id = 11,
                            ChildCategoryId = 4,
                            IsDeleted = false,
                            Name = "Danh mục"
                        },
                        new
                        {
                            Id = 12,
                            ChildCategoryId = 4,
                            IsDeleted = false,
                            Name = "Dạng bào chế"
                        },
                        new
                        {
                            Id = 13,
                            ChildCategoryId = 4,
                            IsDeleted = false,
                            Name = "Quy cách"
                        },
                        new
                        {
                            Id = 14,
                            ChildCategoryId = 4,
                            IsDeleted = false,
                            Name = "Thành Phần"
                        },
                        new
                        {
                            Id = 15,
                            ChildCategoryId = 4,
                            IsDeleted = false,
                            Name = "Số đăng kí"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressToShipId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FreightCost")
                        .HasColumnType("float");

                    b.Property<int?>("IsConfirm")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusOfPayment")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressToShipId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Domain.Entities.ParentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParentCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Thực phẩm chức năng"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Dược mỹ phẩm"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Chăm sóc cá nhân"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Thuốc"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Thiết bị y tế"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Domain.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LikeQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("DiscountPercent")
                        .HasColumnType("real");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PriceSold")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantitySold")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 5,
                            Country = "Việt Nam",
                            Description = "Fluconazole 150mg là sản phẩm của Công ty TNHH Stada Việt Nam có thành phần chính là Fluconazole có tác dụng điều trị các bệnh nấm Candida tại chỗ và toàn thân, các bệnh nấm do các chủng vi khuẩn khác và dự phòng nhiễm nấm Candida ở bệnh nhân ghép tủy xương đang được hóa trị liệu gây độc tế bào hoặc xạ trị.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Fluconazole Stada 150mg",
                            PriceSold = 25.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 27.5
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 6,
                            Country = "Việt Nam",
                            Description = "Hoạt Huyết Trường Phúc là sản phẩm của Công ty TNHH Dược Thảo Hoàng Thành có thành phần chính là cao đặc hỗn hợp các dược liệu đương quy, ích mẫu, ngưu tất, thục địa, xích thược, xuyên khung có công dụng điều trị các chứng huyết hư, ứ trệ. Phòng ngừa và điều trị thiểu năng tuần hoàn não (mệt mỏi, đau đầu, chóng mặt, mất thăng bằng, hoa mắt, mất ngủ, suy giảm trí nhớ), thiểu năng tuần hoàn ngoại vi (đau mỏi vai gáy, tê cứng cổ, đau cách hồi, đau cơ, tê bì chân tay), phòng ngừa và hỗ trợ điều trị xơ vữa động mạch, nghẽn mạch, tai biến mạch máo não.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Hoạt Huyết Trường Phúc",
                            PriceSold = 95.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 104.5
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 7,
                            Country = "Việt Nam",
                            Description = "Ginkokup 40 là sản phẩm thuốc của Công ty cổ phần Korea United Pharm. Int' L. - Singapore với thành phần hoạt chất là cao chiết lá bạch quả được chỉ định trong điều trị bệnh sa sút trí tuệ, kể cả bệnh Alzheimer; điều trị các rối loạn mạch máu não, các di chứng sau các tai biến mạch máu não và chấn thương sọ não, hội chứng về não cũng như bị nhức đầu, suy giảm trí nhớ, rối loạn tập trung, suy nhược, chóng mặt; điều trị các bệnh rối loạn tuần hoàn ngoại biên, cải thiện hội chứng Raynaud và điều trị các triệu chứng của bệnh đau cách hồi; điều trị ù tai do mạch máu hoặc do thoái hóa.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Ginkokup 40 Korea United",
                            PriceSold = 150.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 165.0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 8,
                            Country = "Việt Nam",
                            Description = "Thuốc Dacolfort được sản xuất bởi Dược Danapha, có thành phần chính là Diosminn và Hesperidin, được chỉ định để điều trị những triệu chứng có liên quan đến suy tĩnh mạch, mạch bạch huyết (nặng chân, đau, chân khó chịu vào buổi sáng). Điều trị các dấu hiệu chức năng có liên quan tới cơn trĩ cấp.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Dacolfort Danapha",
                            PriceSold = 78.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 85.799999999999997
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 9,
                            Country = "Việt Nam",
                            Description = "Thuốc Henex là sản phẩm của Công ty Cổ phần Dược phẩm Glomed (Abbott) có thành phần chính là phân đoạn flavonoid. Thuốc dùng điều trị các triệu chứng và dấu hiệu của suy tĩnh mạch – mạch bạch huyết vô căn mạn tính ở chi dưới như nặng ở chân, đau chân, phù chân, chuột rút về đêm và chồn chân. Điều trị các triệu chứng của cơn trĩ cấp và bệnh trĩ mạn tính.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Henex 500mg Abbott",
                            PriceSold = 220.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 242.0
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 10,
                            Country = "Romania",
                            Description = "Thuốc Catavastatin 10 mg của S.C. ANTIBIOTICE S.A, thuốc có thành phần chính là Rosuvastatin. Đây là thuốc được dùng để điều trị tăng cholesterol máu nguyên phát, rối loạn lipid máu hỗn hợp, điều trị tăng cholesterol máu gia đình kiểu đồng hợp tử.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Catavastatin 10mg S.C Antibiotice",
                            PriceSold = 300.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 330.0
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 11,
                            Country = "Việt Nam",
                            Description = "Valsartan-MV 80mg được sản xuất bởi Công ty TNHH US Pharma USA, thành phần chính là valsartan, được dùng để điều trị bệnh tăng huyết áp và suy tim ở người lớn và trẻ em trên 6 tuổi. Ngoài ra, thuốc cũng được dùng để tăng cơ hội sống sót kéo dài hơn sau cơn nhồi máu cơ tim.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Valsartan-MV 80mg USP",
                            PriceSold = 120.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 132.0
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 12,
                            Country = "Việt Nam",
                            Description = "Thuốc Carhurol 10 là sản phẩm của Công ty cổ phần BV Pharma. Thuốc có thành phần chính là Rosuvastatin. Đây là thuốc dùng để điều trị tăng cholesterol máu ở người lớn, thanh thiếu niên, trẻ em từ 6 tuổi trở lên và phòng ngừa các biến cố tim mạch.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Carhurol 10 BRV",
                            PriceSold = 250.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 275.0
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 13,
                            Country = "Việt Nam",
                            Description = "Npluvico được sản xuất bởi Công ty Cổ phần Dược Nature Việt Nam. Thuốc có thành phần chính là cao khô lá bạch quả, cao khô rễ đinh lăng.\r\n\r\nNpluvico dùng để điều trị suy tuần hoàn não, rối loạn tuần hoàn ngoại biên, rối loạn thần kinh cảm giác, rối loạn thị giác (bệnh võng mạc), bệnh về tai mũi họng (chóng mặt, ù tai, giảm thính lực), di chứng tai biến mạch máu não và chấn thương sọ não. Phòng ngừa và làm chậm quá trình tiến triển của bệnh Alzheimer ở người lớn tuổi.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Npluvico Nature",
                            PriceSold = 168.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 184.80000000000001
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 13,
                            Country = "Việt Nam",
                            Description = "Scanneuron được sản xuất bởi công ty Stella, thành phần chính là Thiamin nitrat (Vitamin B1), Pyridoxin hydroclorid (vitamin B6), Cyanocobalamin (vitamin B12), được chỉ định để điều trị hỗ trợ các rối loạn về hệ thần kinh như đau dây thần kinh, viêm dây thần kinh ngoại biên, viêm dây thần kinh mắt, viêm dây thần kinh do tiểu đường và do rượu, viêm đa dây thần kinh, dị cảm, đau thần kinh tọa và co giật do tăng tính dễ kích thích của hệ thần kinh trung ương.",
                            DiscountPercent = 0.1f,
                            Name = "Thuốc Scanneuron Stella",
                            PriceSold = 125.0,
                            Quantity = 100,
                            QuantitySold = 0,
                            UnitPrice = 137.5
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductMaterials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Detail = "Thuốc kháng nấm",
                            IsDeleted = false,
                            MaterialId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Detail = "Viên nang cứng",
                            IsDeleted = false,
                            MaterialId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            Detail = "Hộp 1 Vỉ x 1 Viên",
                            IsDeleted = false,
                            MaterialId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            Detail = "Fluconazol",
                            IsDeleted = false,
                            MaterialId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            Detail = "VD-35475-21",
                            IsDeleted = false,
                            MaterialId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            Detail = "Thuốc tăng cường tuần hoàn não",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            Detail = "Hộp 3 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            Detail = "Thục địa, Ích mẫu, Ngưu tất (Rễ), Đương quy, Xích thược, Xuyên khung",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            Detail = "VD-30094-18",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 11,
                            Detail = "Thuốc tăng cường tuần hoàn não",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 12,
                            Detail = "Viên nang mềm",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 13,
                            Detail = "Hộp 6 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 14,
                            Detail = "Ginkgo biloba",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 15,
                            Detail = "VD-27294-17",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 16,
                            Detail = "Thuốc trị trĩ, suy giãn tĩnh mạch",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 17,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 18,
                            Detail = "Hộp 3 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 19,
                            Detail = "Diosmin, Hesperidin",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 20,
                            Detail = "VD-30231-18",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 21,
                            Detail = "Thuốc trị trĩ, suy giãn tĩnh mạch",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 22,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 23,
                            Detail = "Hộp 10 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 24,
                            Detail = "Diosmin, Hesperidin",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 25,
                            Detail = "VD-30810-18",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 26,
                            Detail = "Thuốc trị mỡ máu",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 27,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 28,
                            Detail = "Hộp 3 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 29,
                            Detail = "Rosuvastatin",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 30,
                            Detail = "VN-22675-20",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 31,
                            Detail = "Thuốc tim mạch huyết áp",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 32,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 33,
                            Detail = "Hộp 3 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 34,
                            Detail = "Valsartan",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 35,
                            Detail = "VD-32469-19",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 36,
                            Detail = "Thuốc trị mỡ máu",
                            IsDeleted = false,
                            MaterialId = 6,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 37,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 7,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 38,
                            Detail = "Hộp 3 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 8,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 39,
                            Detail = "Rosuvastatin",
                            IsDeleted = false,
                            MaterialId = 9,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 40,
                            Detail = "VD-31018-18",
                            IsDeleted = false,
                            MaterialId = 10,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 41,
                            Detail = "Thuốc thần kinh",
                            IsDeleted = false,
                            MaterialId = 11,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 42,
                            Detail = "Viên nang mềm",
                            IsDeleted = false,
                            MaterialId = 12,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 43,
                            Detail = "Hộp 6 Vỉ x 10 Viên",
                            IsDeleted = false,
                            MaterialId = 13,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 44,
                            Detail = "Bạch quả, Đinh lăng",
                            IsDeleted = false,
                            MaterialId = 14,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 45,
                            Detail = "VD-21622-14",
                            IsDeleted = false,
                            MaterialId = 15,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 46,
                            Detail = "Thuốc thần kinh",
                            IsDeleted = false,
                            MaterialId = 11,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 47,
                            Detail = "Viên nén bao phim",
                            IsDeleted = false,
                            MaterialId = 12,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 48,
                            Detail = "Hộp 10 vỉ x 10 viên",
                            IsDeleted = false,
                            MaterialId = 13,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 49,
                            Detail = "Vitamin B1, Vitamin B6, Vitamin B12",
                            IsDeleted = false,
                            MaterialId = 14,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 50,
                            Detail = "VD-22677-15",
                            IsDeleted = false,
                            MaterialId = 15,
                            ProductId = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.ReportOfUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("ReportTypeId");

                    b.ToTable("ReportOfUsers");
                });

            modelBuilder.Entity("Domain.Entities.ReportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportTypes");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Customer",
                            IsDeleted = false,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Admin",
                            IsDeleted = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ShipCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShipCompanies");
                });

            modelBuilder.Entity("Domain.Entities.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipCompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipCompanyId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalQuantityVoucher")
                        .HasColumnType("int");

                    b.Property<int?>("UsedQuanity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Domain.Entities.VoucherUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificationBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUsage")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherUsages");
                });

            modelBuilder.Entity("Domain.Entities.AddressUser", b =>
                {
                    b.HasOne("Domain.Entities.AddressToShip", "AddressToShip")
                        .WithMany("AddressUsers")
                        .HasForeignKey("AddressToShipId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("AddressUsers")
                        .HasForeignKey("UserId");

                    b.Navigation("AddressToShip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.ChildCategory", b =>
                {
                    b.HasOne("Domain.Entities.ParentCategory", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.HasOne("Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Discount", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProductId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Image", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Material", b =>
                {
                    b.HasOne("Domain.Entities.ChildCategory", "ChildCategory")
                        .WithMany("Materials")
                        .HasForeignKey("ChildCategoryId");

                    b.Navigation("ChildCategory");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.AddressToShip", "AddressToShip")
                        .WithMany("Orders")
                        .HasForeignKey("AddressToShipId");

                    b.HasOne("Domain.Entities.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId");

                    b.HasOne("Domain.Entities.Shipper", "Shipper")
                        .WithMany("Orders")
                        .HasForeignKey("ShipperId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("AddressToShip");

                    b.Navigation("Payment");

                    b.Navigation("Shipper");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Post", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Domain.Entities.ProductMaterial", b =>
                {
                    b.HasOne("Domain.Entities.Material", "Material")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("MaterialId");

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("ProductId");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.ReportOfUser", b =>
                {
                    b.HasOne("Domain.Entities.Comment", "Comment")
                        .WithMany("ReportOfUsers")
                        .HasForeignKey("CommentId");

                    b.HasOne("Domain.Entities.ReportType", "ReportType")
                        .WithMany("ReportOfUsers")
                        .HasForeignKey("ReportTypeId");

                    b.Navigation("Comment");

                    b.Navigation("ReportType");
                });

            modelBuilder.Entity("Domain.Entities.Shipper", b =>
                {
                    b.HasOne("Domain.Entities.ShipCompany", "ShipCompany")
                        .WithMany("Shippers")
                        .HasForeignKey("ShipCompanyId");

                    b.Navigation("ShipCompany");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.VoucherUsage", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("VoucherUsages")
                        .HasForeignKey("OrderId");

                    b.HasOne("Domain.Entities.Voucher", "Voucher")
                        .WithMany("VoucherUsages")
                        .HasForeignKey("VoucherId");

                    b.Navigation("Order");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Domain.Entities.AddressToShip", b =>
                {
                    b.Navigation("AddressUsers");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.ChildCategory", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.Navigation("ReportOfUsers");
                });

            modelBuilder.Entity("Domain.Entities.Material", b =>
                {
                    b.Navigation("ProductMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("VoucherUsages");
                });

            modelBuilder.Entity("Domain.Entities.ParentCategory", b =>
                {
                    b.Navigation("ChildCategories");
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Feedbacks");

                    b.Navigation("Images");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductMaterials");
                });

            modelBuilder.Entity("Domain.Entities.ReportType", b =>
                {
                    b.Navigation("ReportOfUsers");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.ShipCompany", b =>
                {
                    b.Navigation("Shippers");
                });

            modelBuilder.Entity("Domain.Entities.Shipper", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("AddressUsers");

                    b.Navigation("Comments");

                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Domain.Entities.Voucher", b =>
                {
                    b.Navigation("VoucherUsages");
                });
#pragma warning restore 612, 618
        }
    }
}
